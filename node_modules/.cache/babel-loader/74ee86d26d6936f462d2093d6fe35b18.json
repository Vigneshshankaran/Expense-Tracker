{"ast":null,"code":"var _jsxFileName = \"/home/vignesh/Desktop/Money-Tracker-master/client/src/components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AddTransaction from \"./AddTransaction\";\nimport TransactionCard from \"./TransactionCard\";\nimport Balance from \"./Balance\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport Grid from \"@material-ui/core/Grid\"; //below imports for making website design responsive\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\"; //importing global contexts\n\nimport { TransactionsListContext } from \"../context/TransactionsListContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const {\n    transactionsList,\n    getTransactions,\n    addTransaction,\n    deleteTransaction,\n    showMessage,\n    message,\n    resetShowMessage\n  } = useContext(TransactionsListContext);\n  console.log(\"rendered\"); //declaring state for managing the transactions list\n  //const [transactionsList, setTransactionsList] = useState([]);\n\n  const [currDate, setCurrDate] = useState(new Date().toISOString());\n  const [balance, setBalance] = useState({\n    income: Number(0),\n    expense: Number(0)\n  });\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\"); //fetching all stored transactions from the backend ( add auth token to request )\n\n  useEffect(() => {\n    getTransactions();\n  }, []); //months array to display month\n\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; //function to go to prev month for prev button\n\n  function handlePrev() {\n    setCurrDate(prevState => {\n      const d = new Date(prevState);\n      d.setMonth(d.getMonth() - 1);\n      return d.toISOString();\n    });\n  } //function to go to next month for next button\n\n\n  function handleNext() {\n    setCurrDate(prevState => {\n      const d = new Date(prevState);\n      d.setMonth(d.getMonth() + 1);\n      return d.toISOString();\n    });\n  } //change balance state whenever month changes\n\n\n  useEffect(() => {\n    changeBalance();\n  }, [currDate, transactionsList]); //function for changing balance\n\n  function changeBalance() {\n    let monthlyExpense = Number(0),\n        monthlyIncome = Number(0);\n\n    for (let i = 0; i < transactionsList.length; i++) {\n      if (new Date(transactionsList[i].date).getMonth() === new Date(currDate).getMonth() && new Date(transactionsList[i].date).getFullYear() === new Date(currDate).getFullYear()) {\n        if (transactionsList[i].type === \"expense\") {\n          monthlyExpense += Number(transactionsList[i].amount);\n        } else {\n          monthlyIncome += Number(transactionsList[i].amount);\n        }\n      }\n    }\n\n    setBalance({\n      income: monthlyIncome,\n      expense: monthlyExpense\n    });\n  } //for mobile devices\n\n\n  const [openAddForm, setOpenAddForm] = useState(false); //const [showSuccess, setShowSuccess] = useState(showMessage);\n\n  function handleAddIconClick() {\n    setOpenAddForm(true);\n  }\n\n  function handleClose() {\n    setOpenAddForm(false);\n  }\n\n  if (isAuthenticated === \"false\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        direction: \"row\",\n        justifyContent: \"space-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(AddTransaction, {\n              addTransaction: addTransaction,\n              handleFormClose: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-transactions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent-transactions-header\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handlePrev,\n                children: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [months[new Date(currDate).getMonth()], \" \", new Date(currDate).getFullYear()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleNext,\n                children: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n              mdUp: true,\n              children: /*#__PURE__*/_jsxDEV(Balance, {\n                balance: balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), balance.income === 0 && balance.expense === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"no-data-image\",\n                src: \"/images/icons/error.png\",\n                width: \"100px\",\n                height: \"100px\",\n                alt: \"no data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No Data Available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), transactionsList.filter(transaction => {\n              return new Date(transaction.date).getMonth() === new Date(currDate).getMonth() && new Date(transaction.date).getFullYear() === new Date(currDate).getFullYear();\n            }).sort((a, b) => {\n              return new Date(b.date).getDate() - new Date(a.date).getDate();\n            }).map(transaction => {\n              return /*#__PURE__*/_jsxDEV(TransactionCard, {\n                transaction: transaction,\n                deleteTransaction: deleteTransaction\n              }, transaction._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          smDown: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(Balance, {\n              balance: balance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        mdUp: true,\n        children: [/*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          style: {\n            position: \"fixed\",\n            right: \"30px\",\n            bottom: \"30px\"\n          },\n          onClick: handleAddIconClick,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: openAddForm,\n          onClose: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"Add Transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: /*#__PURE__*/_jsxDEV(AddTransaction, {\n              addTransaction: addTransaction,\n              handleFormClose: handleClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        open: showMessage,\n        onClose: () => resetShowMessage(),\n        message: message,\n        autoHideDuration: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Od1Lf6YcqXhgDwpBUVKgvzQjkj0=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/vignesh/Desktop/Money-Tracker-master/client/src/components/Dashboard.jsx"],"names":["React","useState","useEffect","useContext","Redirect","Navbar","AddTransaction","TransactionCard","Balance","IconButton","NavigateBeforeIcon","NavigateNextIcon","Grid","Hidden","Fab","AddIcon","Dialog","DialogActions","DialogContent","DialogTitle","Button","Snackbar","TransactionsListContext","Dashboard","transactionsList","getTransactions","addTransaction","deleteTransaction","showMessage","message","resetShowMessage","console","log","currDate","setCurrDate","Date","toISOString","balance","setBalance","income","Number","expense","isAuthenticated","localStorage","getItem","months","handlePrev","prevState","d","setMonth","getMonth","handleNext","changeBalance","monthlyExpense","monthlyIncome","i","length","date","getFullYear","type","amount","openAddForm","setOpenAddForm","handleAddIconClick","handleClose","filter","transaction","sort","a","b","getDate","map","_id","position","right","bottom","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport AddTransaction from \"./AddTransaction\";\nimport TransactionCard from \"./TransactionCard\";\nimport Balance from \"./Balance\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport Grid from \"@material-ui/core/Grid\";\n//below imports for making website design responsive\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\n//importing global contexts\nimport { TransactionsListContext } from \"../context/TransactionsListContext\";\n\nfunction Dashboard() {\n  const {\n    transactionsList,\n    getTransactions,\n    addTransaction,\n    deleteTransaction,\n    showMessage,\n    message,\n    resetShowMessage,\n  } = useContext(TransactionsListContext);\n  console.log(\"rendered\");\n\n  //declaring state for managing the transactions list\n  //const [transactionsList, setTransactionsList] = useState([]);\n  const [currDate, setCurrDate] = useState(new Date().toISOString());\n  const [balance, setBalance] = useState({\n    income: Number(0),\n    expense: Number(0),\n  });\n  const isAuthenticated = localStorage.getItem(\"isAuthenticated\");\n\n  //fetching all stored transactions from the backend ( add auth token to request )\n  useEffect(() => {\n    getTransactions();\n  }, []);\n\n  //months array to display month\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  //function to go to prev month for prev button\n  function handlePrev() {\n    setCurrDate((prevState) => {\n      const d = new Date(prevState);\n      d.setMonth(d.getMonth() - 1);\n      return d.toISOString();\n    });\n  }\n\n  //function to go to next month for next button\n  function handleNext() {\n    setCurrDate((prevState) => {\n      const d = new Date(prevState);\n      d.setMonth(d.getMonth() + 1);\n      return d.toISOString();\n    });\n  }\n\n  //change balance state whenever month changes\n  useEffect(() => {\n    changeBalance();\n  }, [currDate, transactionsList]);\n\n  //function for changing balance\n  function changeBalance() {\n    let monthlyExpense = Number(0),\n      monthlyIncome = Number(0);\n\n    for (let i = 0; i < transactionsList.length; i++) {\n      if (\n        new Date(transactionsList[i].date).getMonth() ===\n          new Date(currDate).getMonth() &&\n        new Date(transactionsList[i].date).getFullYear() ===\n          new Date(currDate).getFullYear()\n      ) {\n        if (transactionsList[i].type === \"expense\") {\n          monthlyExpense += Number(transactionsList[i].amount);\n        } else {\n          monthlyIncome += Number(transactionsList[i].amount);\n        }\n      }\n    }\n\n    setBalance({\n      income: monthlyIncome,\n      expense: monthlyExpense,\n    });\n  }\n\n  //for mobile devices\n  const [openAddForm, setOpenAddForm] = useState(false);\n  //const [showSuccess, setShowSuccess] = useState(showMessage);\n\n  function handleAddIconClick() {\n    setOpenAddForm(true);\n  }\n\n  function handleClose() {\n    setOpenAddForm(false);\n  }\n\n  if (isAuthenticated === \"false\") {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container-dashboard\">\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n          justifyContent=\"space-evenly\"\n        >\n          <Hidden smDown>\n            <Grid item xs={12} md={3}>\n              <AddTransaction\n                addTransaction={addTransaction}\n                handleFormClose={() => {}}\n              />\n            </Grid>\n          </Hidden>\n          <Grid item xs={12} md={6}>\n            <div className=\"recent-transactions\">\n              {/* <p>Recent Transactions</p> */}\n              <div className=\"recent-transactions-header\">\n                <IconButton onClick={handlePrev}>\n                  <NavigateBeforeIcon />\n                </IconButton>\n                <p>\n                  {months[new Date(currDate).getMonth()]}{\" \"}\n                  {new Date(currDate).getFullYear()}\n                </p>\n                <IconButton onClick={handleNext}>\n                  <NavigateNextIcon />\n                </IconButton>\n              </div>\n              <Hidden mdUp>\n                <Balance balance={balance} />\n              </Hidden>\n              {/* display no data icon if no transactions are available */}\n              {balance.income === 0 && balance.expense === 0 && (\n                <div className=\"no-data\">\n                  <img\n                    className=\"no-data-image\"\n                    src={\"/images/icons/error.png\"}\n                    width=\"100px\"\n                    height=\"100px\"\n                    alt=\"no data\"\n                  />\n                  <p>No Data Available.</p>\n                </div>\n              )}\n              {/* get transactions according to month */}\n              {transactionsList\n                .filter((transaction) => {\n                  return (\n                    new Date(transaction.date).getMonth() ===\n                      new Date(currDate).getMonth() &&\n                    new Date(transaction.date).getFullYear() ===\n                      new Date(currDate).getFullYear()\n                  );\n                })\n                .sort((a, b) => {\n                  return (\n                    new Date(b.date).getDate() - new Date(a.date).getDate()\n                  );\n                })\n                .map((transaction) => {\n                  return (\n                    <TransactionCard\n                      key={transaction._id}\n                      transaction={transaction}\n                      deleteTransaction={deleteTransaction}\n                    />\n                  );\n                })}\n            </div>\n          </Grid>\n          <Hidden smDown>\n            <Grid item xs={12} md={2}>\n              <Balance balance={balance} />\n            </Grid>\n          </Hidden>\n        </Grid>\n        {/*for mobile devices*/}\n        <Hidden mdUp>\n          <Fab\n            color=\"primary\"\n            style={{ position: \"fixed\", right: \"30px\", bottom: \"30px\" }}\n            onClick={handleAddIconClick}\n          >\n            <AddIcon />\n          </Fab>\n          {/* add transaction pop up for add icon */}\n          <Dialog open={openAddForm} onClose={handleClose}>\n            <DialogTitle>Add Transaction</DialogTitle>\n            <DialogContent>\n              <AddTransaction\n                addTransaction={addTransaction}\n                handleFormClose={handleClose}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Hidden>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n          open={showMessage}\n          onClose={() => resetShowMessage()}\n          message={message}\n          autoHideDuration={3000}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}