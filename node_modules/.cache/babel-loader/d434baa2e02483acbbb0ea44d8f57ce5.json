{"ast":null,"code":"var _jsxFileName = \"/home/vignesh/Desktop/Money-Tracker-master/client/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  //declare state\n  const [userInput, setUserInput] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [helper, setHelper] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let history = useHistory();\n  const [isInvalid, setInvalid] = useState(false);\n\n  function handleInputChange(event) {\n    const eventCallerName = event.target.name;\n    const eventCallerValue = event.target.value;\n    setUserInput(prevState => {\n      return { ...prevState,\n        [eventCallerName]: eventCallerValue\n      };\n    });\n  }\n\n  function isValid() {\n    if (userInput.email === \"\") {\n      setHelper(prev => {\n        return { ...prev,\n          email: \"Enter email\"\n        };\n      });\n      return false;\n    }\n\n    if (userInput.password === \"\") {\n      setHelper(prev => {\n        return { ...prev,\n          password: \"Enter password\"\n        };\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleInputClick(event) {\n    const eventCallerName = event.target.name;\n    setHelper(prev => {\n      return { ...prev,\n        [eventCallerName]: \"\"\n      };\n    });\n    setInvalid(false);\n  }\n\n  function handleClick(event) {\n    event.preventDefault();\n    return isValid() && callLogin();\n  }\n\n  async function callLogin() {\n    const response = await fetch(\"/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: userInput.email,\n        password: userInput.password\n      })\n    });\n    const data = await response.json();\n\n    if (data.success === true) {\n      localStorage.setItem(\"authToken\", data.auth_token);\n      localStorage.setItem(\"isAuthenticated\", true);\n      history.push(\"/dashboard\");\n    } else {\n      setInvalid(prev => !prev);\n      setUserInput({\n        email: \"\",\n        password: \"\"\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-icon\",\n        children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Incorrect email or password!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        name: \"email\",\n        autoFocus: true,\n        onChange: handleInputChange,\n        value: userInput.email,\n        helperText: helper.email,\n        onClick: handleInputClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        type: \"password\",\n        name: \"password\",\n        onChange: handleInputChange,\n        value: userInput.password,\n        helperText: helper.password,\n        onClick: handleInputClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        onClick: handleClick,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New User? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"6kRvHFi1HyGqmCKXFA7EPvJqVts=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vignesh/Desktop/Money-Tracker-master/client/src/components/Login.jsx"],"names":["React","useState","Link","useHistory","TextField","Button","AccountCircleIcon","Login","userInput","setUserInput","email","password","helper","setHelper","history","isInvalid","setInvalid","handleInputChange","event","eventCallerName","target","name","eventCallerValue","value","prevState","isValid","prev","handleInputClick","handleClick","preventDefault","callLogin","response","fetch","method","headers","body","JSON","stringify","data","json","success","localStorage","setItem","auth_token","push","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nfunction Login() {\n  //declare state\n  const [userInput, setUserInput] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [helper, setHelper] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  let history = useHistory();\n\n  const [isInvalid, setInvalid] = useState(false);\n\n  function handleInputChange(event) {\n    const eventCallerName = event.target.name;\n    const eventCallerValue = event.target.value;\n\n    setUserInput((prevState) => {\n      return {\n        ...prevState,\n        [eventCallerName]: eventCallerValue,\n      };\n    });\n  }\n\n  function isValid() {\n    if (userInput.email === \"\") {\n      setHelper((prev) => {\n        return {\n          ...prev,\n          email: \"Enter email\",\n        };\n      });\n\n      return false;\n    }\n\n    if (userInput.password === \"\") {\n      setHelper((prev) => {\n        return {\n          ...prev,\n          password: \"Enter password\",\n        };\n      });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  function handleInputClick(event) {\n    const eventCallerName = event.target.name;\n    setHelper((prev) => {\n      return {\n        ...prev,\n        [eventCallerName]: \"\",\n      };\n    });\n\n    setInvalid(false);\n  }\n\n  function handleClick(event) {\n    event.preventDefault();\n    return isValid() && callLogin();\n  }\n\n  async function callLogin() {\n    const response = await fetch(\"/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: userInput.email,\n        password: userInput.password,\n      }),\n    });\n\n    const data = await response.json();\n\n    if (data.success === true) {\n      localStorage.setItem(\"authToken\", data.auth_token);\n      localStorage.setItem(\"isAuthenticated\", true);\n      history.push(\"/dashboard\");\n    } else {\n      setInvalid((prev) => !prev);\n      setUserInput({\n        email: \"\",\n        password: \"\",\n      });\n    }\n  }\n\n  return (\n    <div className=\"login-wrapper\">\n      <form id=\"login-form\">\n        <div className=\"login-icon\">\n          <AccountCircleIcon fontSize=\"large\" />\n        </div>\n        {isInvalid && (\n          <p style={{ color: \"red\" }}>Incorrect email or password!</p>\n        )}\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          name=\"email\"\n          autoFocus\n          onChange={handleInputChange}\n          value={userInput.email}\n          helperText={helper.email}\n          onClick={handleInputClick}\n        />\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          onChange={handleInputChange}\n          value={userInput.password}\n          helperText={helper.password}\n          onClick={handleInputClick}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={handleClick}\n        >\n          Login\n        </Button>\n        <p>\n          New User? <Link to=\"/register\">Register</Link>\n        </p>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}